plugins {
    id 'java-library'
    id 'maven-publish'
    id 'net.neoforged.moddev.legacyforge' version '2.0.74'
    id 'eclipse'
    id 'idea'
}

tasks.named('wrapper', Wrapper).configure {
    distributionType = Wrapper.DistributionType.BIN
}

version = mod_version
group = mod_group_id

repositories {
    maven { url "https://maven.blamejared.com/" }
    exclusiveContent {
        forRepository {
            maven { url "https://api.modrinth.com/maven/" }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
}

base {
    archivesName = mod_id
}

// Mojang ships Java 17 to end users from 1.18 to 1.20.4, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

legacyForge {
    version = project.forge_version

    parchment {
        mappingsVersion = project.parchment_mappings_version
        minecraftVersion = project.parchment_minecraft_version
    }

//    validateAccessTransformers = true

    runs {
        client {
            client()
        }
        data {
            data()
        }
        server {
            server()
        }
    }

    mods {
        "${mod_id}" {
            sourceSet(sourceSets.main)
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

configurations {
    runtimeClasspath.extendsFrom localRuntime
}

dependencies {
	implementation "maven.modrinth:farmers-delight:${project.fd_version}"

	compileOnly "mezz.jei:jei-${project.minecraft_version}-forge-api:${project.jei_version}"
	localRuntime "mezz.jei:jei-${project.minecraft_version}-forge:${project.jei_version}"
}

var generateModMetadata = tasks.register("generateModMetadata", ProcessResources) {
    var replaceProperties = [
            minecraft_version_range: minecraft_version_range,
            forge_version_range    : forge_version_range,
            loader_version_range   : loader_version_range,
            mod_id                 : mod_id,
            mod_name               : mod_name,
            mod_license            : mod_license,
            mod_version            : mod_version,
            mod_authors            : mod_authors,
            mod_credits            : mod_credits,
            mod_description        : mod_description,
            fd_version_range       : fd_version_range,
            jei_version_range      : jei_version_range
    ]
    inputs.properties replaceProperties
    expand replaceProperties
    from "src/main/templates"
    into "build/generated/sources/modMetadata"
}
sourceSets.main.resources.srcDir generateModMetadata
legacyForge.ideSyncTask generateModMetadata

// Example configuration to allow publishing using the maven-publish plugin
publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
